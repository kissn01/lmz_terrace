// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TDBNewbieData {

	@TarsStructProperty(order = 0, isRequire = true)
	public java.util.List<java.lang.Short> vecCurrFinishedStep = null;
	@TarsStructProperty(order = 1, isRequire = true)
	public java.util.Map<java.lang.Short, java.util.List<java.lang.Short>> mapFinishedSteps = null;

	public java.util.List<java.lang.Short> getVecCurrFinishedStep() {
		return vecCurrFinishedStep;
	}

	public void setVecCurrFinishedStep(java.util.List<java.lang.Short> vecCurrFinishedStep) {
		this.vecCurrFinishedStep = vecCurrFinishedStep;
	}

	public java.util.Map<java.lang.Short, java.util.List<java.lang.Short>> getMapFinishedSteps() {
		return mapFinishedSteps;
	}

	public void setMapFinishedSteps(java.util.Map<java.lang.Short, java.util.List<java.lang.Short>> mapFinishedSteps) {
		this.mapFinishedSteps = mapFinishedSteps;
	}

	public TDBNewbieData() {
	}

	public TDBNewbieData(java.util.List<java.lang.Short> vecCurrFinishedStep, java.util.Map<java.lang.Short, java.util.List<java.lang.Short>> mapFinishedSteps) {
		this.vecCurrFinishedStep = vecCurrFinishedStep;
		this.mapFinishedSteps = mapFinishedSteps;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(vecCurrFinishedStep);
		result = prime * result + TarsUtil.hashCode(mapFinishedSteps);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TDBNewbieData)) {
			return false;
		}
		TDBNewbieData other = (TDBNewbieData) obj;
		return (
			TarsUtil.equals(vecCurrFinishedStep, other.vecCurrFinishedStep) &&
			TarsUtil.equals(mapFinishedSteps, other.mapFinishedSteps) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(vecCurrFinishedStep, 0);
		_os.write(mapFinishedSteps, 1);
	}

	static java.util.List<java.lang.Short> cache_vecCurrFinishedStep;
	static { 
		cache_vecCurrFinishedStep = new java.util.ArrayList<java.lang.Short>();
		short var_6 = (short)0;
		cache_vecCurrFinishedStep.add(var_6);
	}
	static java.util.Map<java.lang.Short, java.util.List<java.lang.Short>> cache_mapFinishedSteps;
	static { 
		cache_mapFinishedSteps = new java.util.HashMap<java.lang.Short, java.util.List<java.lang.Short>>();
		short var_7 = (short)0;
		java.util.List<java.lang.Short> var_8 = new java.util.ArrayList<java.lang.Short>();
		short var_9 = (short)0;
		var_8.add(var_9);
		cache_mapFinishedSteps.put(var_7 ,var_8);
	}

	public void readFrom(TarsInputStream _is) {
		this.vecCurrFinishedStep = (java.util.List<java.lang.Short>) _is.read(cache_vecCurrFinishedStep, 0, true);
		this.mapFinishedSteps = (java.util.Map<java.lang.Short, java.util.List<java.lang.Short>>) _is.read(cache_mapFinishedSteps, 1, true);
	}

}
