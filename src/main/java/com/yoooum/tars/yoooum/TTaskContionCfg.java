// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.yoooum;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TTaskContionCfg {

	@TarsStructProperty(order = 0, isRequire = false)
	public int iConditionID = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public int iOper = 0;
	@TarsStructProperty(order = 2, isRequire = false)
	public int iConditionValue = 0;

	public int getIConditionID() {
		return iConditionID;
	}

	public void setIConditionID(int iConditionID) {
		this.iConditionID = iConditionID;
	}

	public int getIOper() {
		return iOper;
	}

	public void setIOper(int iOper) {
		this.iOper = iOper;
	}

	public int getIConditionValue() {
		return iConditionValue;
	}

	public void setIConditionValue(int iConditionValue) {
		this.iConditionValue = iConditionValue;
	}

	public TTaskContionCfg() {
	}

	public TTaskContionCfg(int iConditionID, int iOper, int iConditionValue) {
		this.iConditionID = iConditionID;
		this.iOper = iOper;
		this.iConditionValue = iConditionValue;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(iConditionID);
		result = prime * result + TarsUtil.hashCode(iOper);
		result = prime * result + TarsUtil.hashCode(iConditionValue);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TTaskContionCfg)) {
			return false;
		}
		TTaskContionCfg other = (TTaskContionCfg) obj;
		return (
			TarsUtil.equals(iConditionID, other.iConditionID) &&
			TarsUtil.equals(iOper, other.iOper) &&
			TarsUtil.equals(iConditionValue, other.iConditionValue) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(iConditionID, 0);
		_os.write(iOper, 1);
		_os.write(iConditionValue, 2);
	}


	public void readFrom(TarsInputStream _is) {
		this.iConditionID = _is.read(iConditionID, 0, false);
		this.iOper = _is.read(iOper, 1, false);
		this.iConditionValue = _is.read(iConditionValue, 2, false);
	}

}
