// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.yoooum;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TEquipmentGridInfo {

	@TarsStructProperty(order = 0, isRequire = false)
	public int iPos = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public int nLevel = 0;

	public int getIPos() {
		return iPos;
	}

	public void setIPos(int iPos) {
		this.iPos = iPos;
	}

	public int getNLevel() {
		return nLevel;
	}

	public void setNLevel(int nLevel) {
		this.nLevel = nLevel;
	}

	public TEquipmentGridInfo() {
	}

	public TEquipmentGridInfo(int iPos, int nLevel) {
		this.iPos = iPos;
		this.nLevel = nLevel;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(iPos);
		result = prime * result + TarsUtil.hashCode(nLevel);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TEquipmentGridInfo)) {
			return false;
		}
		TEquipmentGridInfo other = (TEquipmentGridInfo) obj;
		return (
			TarsUtil.equals(iPos, other.iPos) &&
			TarsUtil.equals(nLevel, other.nLevel) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(iPos, 0);
		_os.write(nLevel, 1);
	}


	public void readFrom(TarsInputStream _is) {
		this.iPos = _is.read(iPos, 0, false);
		this.nLevel = _is.read(nLevel, 1, false);
	}

}
