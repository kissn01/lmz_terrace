// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TOneTypeAchiList {

	@TarsStructProperty(order = 0, isRequire = false)
	public int iProgress = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.List<TBaseAchiInfo> vBaseAchiList = null;

	public int getIProgress() {
		return iProgress;
	}

	public void setIProgress(int iProgress) {
		this.iProgress = iProgress;
	}

	public java.util.List<TBaseAchiInfo> getVBaseAchiList() {
		return vBaseAchiList;
	}

	public void setVBaseAchiList(java.util.List<TBaseAchiInfo> vBaseAchiList) {
		this.vBaseAchiList = vBaseAchiList;
	}

	public TOneTypeAchiList() {
	}

	public TOneTypeAchiList(int iProgress, java.util.List<TBaseAchiInfo> vBaseAchiList) {
		this.iProgress = iProgress;
		this.vBaseAchiList = vBaseAchiList;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(iProgress);
		result = prime * result + TarsUtil.hashCode(vBaseAchiList);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TOneTypeAchiList)) {
			return false;
		}
		TOneTypeAchiList other = (TOneTypeAchiList) obj;
		return (
			TarsUtil.equals(iProgress, other.iProgress) &&
			TarsUtil.equals(vBaseAchiList, other.vBaseAchiList) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(iProgress, 0);
		if (null != vBaseAchiList) {
			_os.write(vBaseAchiList, 1);
		}
	}

	static java.util.List<TBaseAchiInfo> cache_vBaseAchiList;
	static { 
		cache_vBaseAchiList = new java.util.ArrayList<TBaseAchiInfo>();
		TBaseAchiInfo var_38 = new TBaseAchiInfo();
		cache_vBaseAchiList.add(var_38);
	}

	public void readFrom(TarsInputStream _is) {
		this.iProgress = _is.read(iProgress, 0, false);
		this.vBaseAchiList = (java.util.List<TBaseAchiInfo>) _is.read(cache_vBaseAchiList, 1, false);
	}

}
