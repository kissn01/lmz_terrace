// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TDBWorkshopInfo {

	@TarsStructProperty(order = 0, isRequire = false)
	public short shLevel = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.List<java.lang.Integer> vecUnlockRecipe = null;

	public short getShLevel() {
		return shLevel;
	}

	public void setShLevel(short shLevel) {
		this.shLevel = shLevel;
	}

	public java.util.List<java.lang.Integer> getVecUnlockRecipe() {
		return vecUnlockRecipe;
	}

	public void setVecUnlockRecipe(java.util.List<java.lang.Integer> vecUnlockRecipe) {
		this.vecUnlockRecipe = vecUnlockRecipe;
	}

	public TDBWorkshopInfo() {
	}

	public TDBWorkshopInfo(short shLevel, java.util.List<java.lang.Integer> vecUnlockRecipe) {
		this.shLevel = shLevel;
		this.vecUnlockRecipe = vecUnlockRecipe;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(shLevel);
		result = prime * result + TarsUtil.hashCode(vecUnlockRecipe);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TDBWorkshopInfo)) {
			return false;
		}
		TDBWorkshopInfo other = (TDBWorkshopInfo) obj;
		return (
			TarsUtil.equals(shLevel, other.shLevel) &&
			TarsUtil.equals(vecUnlockRecipe, other.vecUnlockRecipe) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(shLevel, 0);
		if (null != vecUnlockRecipe) {
			_os.write(vecUnlockRecipe, 1);
		}
	}

	static java.util.List<java.lang.Integer> cache_vecUnlockRecipe;
	static { 
		cache_vecUnlockRecipe = new java.util.ArrayList<java.lang.Integer>();
		int var_10 = 0;
		cache_vecUnlockRecipe.add(var_10);
	}

	public void readFrom(TarsInputStream _is) {
		this.shLevel = _is.read(shLevel, 0, false);
		this.vecUnlockRecipe = (java.util.List<java.lang.Integer>) _is.read(cache_vecUnlockRecipe, 1, false);
	}

}
