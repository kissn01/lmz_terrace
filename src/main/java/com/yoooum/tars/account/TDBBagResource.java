// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TDBBagResource {

	@TarsStructProperty(order = 0, isRequire = false)
	public int iResID = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public int iCount = 0;
	@TarsStructProperty(order = 2, isRequire = false)
	public short shWear = (short)0;
	@TarsStructProperty(order = 3, isRequire = false)
	public long lUniqID = 0L;

	public int getIResID() {
		return iResID;
	}

	public void setIResID(int iResID) {
		this.iResID = iResID;
	}

	public int getICount() {
		return iCount;
	}

	public void setICount(int iCount) {
		this.iCount = iCount;
	}

	public short getShWear() {
		return shWear;
	}

	public void setShWear(short shWear) {
		this.shWear = shWear;
	}

	public long getLUniqID() {
		return lUniqID;
	}

	public void setLUniqID(long lUniqID) {
		this.lUniqID = lUniqID;
	}

	public TDBBagResource() {
	}

	public TDBBagResource(int iResID, int iCount, short shWear, long lUniqID) {
		this.iResID = iResID;
		this.iCount = iCount;
		this.shWear = shWear;
		this.lUniqID = lUniqID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(iResID);
		result = prime * result + TarsUtil.hashCode(iCount);
		result = prime * result + TarsUtil.hashCode(shWear);
		result = prime * result + TarsUtil.hashCode(lUniqID);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TDBBagResource)) {
			return false;
		}
		TDBBagResource other = (TDBBagResource) obj;
		return (
			TarsUtil.equals(iResID, other.iResID) &&
			TarsUtil.equals(iCount, other.iCount) &&
			TarsUtil.equals(shWear, other.shWear) &&
			TarsUtil.equals(lUniqID, other.lUniqID) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(iResID, 0);
		_os.write(iCount, 1);
		_os.write(shWear, 2);
		_os.write(lUniqID, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.iResID = _is.read(iResID, 0, false);
		this.iCount = _is.read(iCount, 1, false);
		this.shWear = _is.read(shWear, 2, false);
		this.lUniqID = _is.read(lUniqID, 3, false);
	}

}
