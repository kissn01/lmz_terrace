// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.yoooum;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TUserTaskInfo {

	@TarsStructProperty(order = 0, isRequire = false)
	public int iTaskId = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public String sTaskName = "";
	@TarsStructProperty(order = 2, isRequire = false)
	public String sTaskDesc = "";
	@TarsStructProperty(order = 3, isRequire = false)
	public int iNpcID = 0;
	@TarsStructProperty(order = 4, isRequire = false)
	public int nAwardType = 0;
	@TarsStructProperty(order = 5, isRequire = false)
	public long lGetTime = 0L;
	@TarsStructProperty(order = 6, isRequire = false)
	public byte bTaskState = (byte)0;
	@TarsStructProperty(order = 7, isRequire = false)
	public java.util.List<TSimpleDesire> vecDesire = null;
	@TarsStructProperty(order = 8, isRequire = false)
	public int iProgess = 0;
	@TarsStructProperty(order = 9, isRequire = false)
	public int iTotalNum = 0;
	@TarsStructProperty(order = 10, isRequire = false)
	public java.util.List<TItemInfo> vecAwardInfo = null;
	@TarsStructProperty(order = 11, isRequire = false)
	public int iFavorValue = 0;
	@TarsStructProperty(order = 12, isRequire = false)
	public byte TaskType = (byte)0;
	@TarsStructProperty(order = 13, isRequire = false)
	public byte Quality = (byte)0;

	public int getITaskId() {
		return iTaskId;
	}

	public void setITaskId(int iTaskId) {
		this.iTaskId = iTaskId;
	}

	public String getSTaskName() {
		return sTaskName;
	}

	public void setSTaskName(String sTaskName) {
		this.sTaskName = sTaskName;
	}

	public String getSTaskDesc() {
		return sTaskDesc;
	}

	public void setSTaskDesc(String sTaskDesc) {
		this.sTaskDesc = sTaskDesc;
	}

	public int getINpcID() {
		return iNpcID;
	}

	public void setINpcID(int iNpcID) {
		this.iNpcID = iNpcID;
	}

	public int getNAwardType() {
		return nAwardType;
	}

	public void setNAwardType(int nAwardType) {
		this.nAwardType = nAwardType;
	}

	public long getLGetTime() {
		return lGetTime;
	}

	public void setLGetTime(long lGetTime) {
		this.lGetTime = lGetTime;
	}

	public byte getBTaskState() {
		return bTaskState;
	}

	public void setBTaskState(byte bTaskState) {
		this.bTaskState = bTaskState;
	}

	public java.util.List<TSimpleDesire> getVecDesire() {
		return vecDesire;
	}

	public void setVecDesire(java.util.List<TSimpleDesire> vecDesire) {
		this.vecDesire = vecDesire;
	}

	public int getIProgess() {
		return iProgess;
	}

	public void setIProgess(int iProgess) {
		this.iProgess = iProgess;
	}

	public int getITotalNum() {
		return iTotalNum;
	}

	public void setITotalNum(int iTotalNum) {
		this.iTotalNum = iTotalNum;
	}

	public java.util.List<TItemInfo> getVecAwardInfo() {
		return vecAwardInfo;
	}

	public void setVecAwardInfo(java.util.List<TItemInfo> vecAwardInfo) {
		this.vecAwardInfo = vecAwardInfo;
	}

	public int getIFavorValue() {
		return iFavorValue;
	}

	public void setIFavorValue(int iFavorValue) {
		this.iFavorValue = iFavorValue;
	}

	public byte getTaskType() {
		return TaskType;
	}

	public void setTaskType(byte TaskType) {
		this.TaskType = TaskType;
	}

	public byte getQuality() {
		return Quality;
	}

	public void setQuality(byte Quality) {
		this.Quality = Quality;
	}

	public TUserTaskInfo() {
	}

	public TUserTaskInfo(int iTaskId, String sTaskName, String sTaskDesc, int iNpcID, int nAwardType, long lGetTime, byte bTaskState, java.util.List<TSimpleDesire> vecDesire, int iProgess, int iTotalNum, java.util.List<TItemInfo> vecAwardInfo, int iFavorValue, byte TaskType, byte Quality) {
		this.iTaskId = iTaskId;
		this.sTaskName = sTaskName;
		this.sTaskDesc = sTaskDesc;
		this.iNpcID = iNpcID;
		this.nAwardType = nAwardType;
		this.lGetTime = lGetTime;
		this.bTaskState = bTaskState;
		this.vecDesire = vecDesire;
		this.iProgess = iProgess;
		this.iTotalNum = iTotalNum;
		this.vecAwardInfo = vecAwardInfo;
		this.iFavorValue = iFavorValue;
		this.TaskType = TaskType;
		this.Quality = Quality;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(iTaskId);
		result = prime * result + TarsUtil.hashCode(sTaskName);
		result = prime * result + TarsUtil.hashCode(sTaskDesc);
		result = prime * result + TarsUtil.hashCode(iNpcID);
		result = prime * result + TarsUtil.hashCode(nAwardType);
		result = prime * result + TarsUtil.hashCode(lGetTime);
		result = prime * result + TarsUtil.hashCode(bTaskState);
		result = prime * result + TarsUtil.hashCode(vecDesire);
		result = prime * result + TarsUtil.hashCode(iProgess);
		result = prime * result + TarsUtil.hashCode(iTotalNum);
		result = prime * result + TarsUtil.hashCode(vecAwardInfo);
		result = prime * result + TarsUtil.hashCode(iFavorValue);
		result = prime * result + TarsUtil.hashCode(TaskType);
		result = prime * result + TarsUtil.hashCode(Quality);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TUserTaskInfo)) {
			return false;
		}
		TUserTaskInfo other = (TUserTaskInfo) obj;
		return (
			TarsUtil.equals(iTaskId, other.iTaskId) &&
			TarsUtil.equals(sTaskName, other.sTaskName) &&
			TarsUtil.equals(sTaskDesc, other.sTaskDesc) &&
			TarsUtil.equals(iNpcID, other.iNpcID) &&
			TarsUtil.equals(nAwardType, other.nAwardType) &&
			TarsUtil.equals(lGetTime, other.lGetTime) &&
			TarsUtil.equals(bTaskState, other.bTaskState) &&
			TarsUtil.equals(vecDesire, other.vecDesire) &&
			TarsUtil.equals(iProgess, other.iProgess) &&
			TarsUtil.equals(iTotalNum, other.iTotalNum) &&
			TarsUtil.equals(vecAwardInfo, other.vecAwardInfo) &&
			TarsUtil.equals(iFavorValue, other.iFavorValue) &&
			TarsUtil.equals(TaskType, other.TaskType) &&
			TarsUtil.equals(Quality, other.Quality) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(iTaskId, 0);
		if (null != sTaskName) {
			_os.write(sTaskName, 1);
		}
		if (null != sTaskDesc) {
			_os.write(sTaskDesc, 2);
		}
		_os.write(iNpcID, 3);
		_os.write(nAwardType, 4);
		_os.write(lGetTime, 5);
		_os.write(bTaskState, 6);
		if (null != vecDesire) {
			_os.write(vecDesire, 7);
		}
		_os.write(iProgess, 8);
		_os.write(iTotalNum, 9);
		if (null != vecAwardInfo) {
			_os.write(vecAwardInfo, 10);
		}
		_os.write(iFavorValue, 11);
		_os.write(TaskType, 12);
		_os.write(Quality, 13);
	}

	static java.util.List<TSimpleDesire> cache_vecDesire;
	static { 
		cache_vecDesire = new java.util.ArrayList<TSimpleDesire>();
		TSimpleDesire var_70 = new TSimpleDesire();
		cache_vecDesire.add(var_70);
	}
	static java.util.List<TItemInfo> cache_vecAwardInfo;
	static { 
		cache_vecAwardInfo = new java.util.ArrayList<TItemInfo>();
		TItemInfo var_71 = new TItemInfo();
		cache_vecAwardInfo.add(var_71);
	}

	public void readFrom(TarsInputStream _is) {
		this.iTaskId = _is.read(iTaskId, 0, false);
		this.sTaskName = _is.readString(1, false);
		this.sTaskDesc = _is.readString(2, false);
		this.iNpcID = _is.read(iNpcID, 3, false);
		this.nAwardType = _is.read(nAwardType, 4, false);
		this.lGetTime = _is.read(lGetTime, 5, false);
		this.bTaskState = _is.read(bTaskState, 6, false);
		this.vecDesire = (java.util.List<TSimpleDesire>) _is.read(cache_vecDesire, 7, false);
		this.iProgess = _is.read(iProgess, 8, false);
		this.iTotalNum = _is.read(iTotalNum, 9, false);
		this.vecAwardInfo = (java.util.List<TItemInfo>) _is.read(cache_vecAwardInfo, 10, false);
		this.iFavorValue = _is.read(iFavorValue, 11, false);
		this.TaskType = _is.read(TaskType, 12, false);
		this.Quality = _is.read(Quality, 13, false);
	}

}
