// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.yoooum;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TWorkshopInfo {

	@TarsStructProperty(order = 0, isRequire = false)
	public short shType = (short)0;
	@TarsStructProperty(order = 1, isRequire = false)
	public short shLevel = (short)0;
	@TarsStructProperty(order = 2, isRequire = false)
	public java.util.List<java.lang.Long> vUnlock = null;

	public short getShType() {
		return shType;
	}

	public void setShType(short shType) {
		this.shType = shType;
	}

	public short getShLevel() {
		return shLevel;
	}

	public void setShLevel(short shLevel) {
		this.shLevel = shLevel;
	}

	public java.util.List<java.lang.Long> getVUnlock() {
		return vUnlock;
	}

	public void setVUnlock(java.util.List<java.lang.Long> vUnlock) {
		this.vUnlock = vUnlock;
	}

	public TWorkshopInfo() {
	}

	public TWorkshopInfo(short shType, short shLevel, java.util.List<java.lang.Long> vUnlock) {
		this.shType = shType;
		this.shLevel = shLevel;
		this.vUnlock = vUnlock;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(shType);
		result = prime * result + TarsUtil.hashCode(shLevel);
		result = prime * result + TarsUtil.hashCode(vUnlock);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TWorkshopInfo)) {
			return false;
		}
		TWorkshopInfo other = (TWorkshopInfo) obj;
		return (
			TarsUtil.equals(shType, other.shType) &&
			TarsUtil.equals(shLevel, other.shLevel) &&
			TarsUtil.equals(vUnlock, other.vUnlock) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(shType, 0);
		_os.write(shLevel, 1);
		if (null != vUnlock) {
			_os.write(vUnlock, 2);
		}
	}

	static java.util.List<java.lang.Long> cache_vUnlock;
	static { 
		cache_vUnlock = new java.util.ArrayList<java.lang.Long>();
		long var_63 = 0L;
		cache_vUnlock.add(var_63);
	}

	public void readFrom(TarsInputStream _is) {
		this.shType = _is.read(shType, 0, false);
		this.shLevel = _is.read(shLevel, 1, false);
		this.vUnlock = (java.util.List<java.lang.Long>) _is.read(cache_vUnlock, 2, false);
	}

}
