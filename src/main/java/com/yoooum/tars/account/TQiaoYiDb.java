// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TQiaoYiDb {

	@TarsStructProperty(order = 0, isRequire = false)
	public long uLastRefreshTM = 0L;
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.Map<java.lang.Integer, TTaskStatusDb> mapTaskData = null;

	public long getULastRefreshTM() {
		return uLastRefreshTM;
	}

	public void setULastRefreshTM(long uLastRefreshTM) {
		this.uLastRefreshTM = uLastRefreshTM;
	}

	public java.util.Map<java.lang.Integer, TTaskStatusDb> getMapTaskData() {
		return mapTaskData;
	}

	public void setMapTaskData(java.util.Map<java.lang.Integer, TTaskStatusDb> mapTaskData) {
		this.mapTaskData = mapTaskData;
	}

	public TQiaoYiDb() {
	}

	public TQiaoYiDb(long uLastRefreshTM, java.util.Map<java.lang.Integer, TTaskStatusDb> mapTaskData) {
		this.uLastRefreshTM = uLastRefreshTM;
		this.mapTaskData = mapTaskData;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(uLastRefreshTM);
		result = prime * result + TarsUtil.hashCode(mapTaskData);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TQiaoYiDb)) {
			return false;
		}
		TQiaoYiDb other = (TQiaoYiDb) obj;
		return (
			TarsUtil.equals(uLastRefreshTM, other.uLastRefreshTM) &&
			TarsUtil.equals(mapTaskData, other.mapTaskData) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(uLastRefreshTM, 0);
		if (null != mapTaskData) {
			_os.write(mapTaskData, 1);
		}
	}

	static java.util.Map<java.lang.Integer, TTaskStatusDb> cache_mapTaskData;
	static { 
		cache_mapTaskData = new java.util.HashMap<java.lang.Integer, TTaskStatusDb>();
		int var_48 = 0;
		TTaskStatusDb var_49 = new TTaskStatusDb();
		cache_mapTaskData.put(var_48 ,var_49);
	}

	public void readFrom(TarsInputStream _is) {
		this.uLastRefreshTM = _is.read(uLastRefreshTM, 0, false);
		this.mapTaskData = (java.util.Map<java.lang.Integer, TTaskStatusDb>) _is.read(cache_mapTaskData, 1, false);
	}

}
